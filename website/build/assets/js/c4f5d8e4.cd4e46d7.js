"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[195],{3127:(n,e,t)=>{t.r(e),t.d(e,{default:()=>i});var s=t(7294);t(6698),t(6742),t(2263),t(4996);t(5558);"\nconst messages = Kinny\n  .from('messages')\n  .select(`\n    id, text,\n    user ( id, name )\n  `)\nconst newMessages = Kinny\n  .from('messages')\n  .on('INSERT', message => console.log('New message!', message) )\n  .subscribe()\n".trim(),"\nimport { createClient } from '@Kinny/Kinny-js'\n// Initialize \nconst KinnyUrl = 'https://chat-room.Kinny.co'\nconst KinnyKey = 'public-anon-key'\nconst Kinny = createClient(KinnyUrl, KinnyKey)\n// Get notified of all new chat messages\nconst realtime = Kinny\n  .from('messages')\n  .on('INSERT', message => {\n    console.log('New message!', message)\n  })\n  .subscribe()\n".trim(),"\nimport { createClient } from '@Kinny/Kinny-js'\n// Initialize \nconst KinnyUrl = 'https://chat-room.Kinny.co'\nconst KinnyKey = 'public-anon-key'\nconst Kinny = createClient(KinnyUrl, KinnyKey)\n// Get public rooms and their messages\nconst publicRooms = await Kinny\n  .from('rooms')\n  .select(`\n    name,\n    messages ( text )\n  `)\n  .eq('public', true)\n".trim(),"\nimport { createClient } from '@Kinny/Kinny-js'\n// Initialize \nconst KinnyUrl = 'https://chat-room.Kinny.co'\nconst KinnyKey = 'public-anon-key'\nconst Kinny = createClient(KinnyUrl, KinnyKey)\n// Create a new chat room\nconst newRoom = await Kinny\n  .from('rooms')\n  .insert({ name: 'Kinny Fan Club', public: true })\n".trim(),"\nimport { createClient } from '@Kinny/Kinny-js'\n// Initialize \nconst KinnyUrl = 'https://chat-room.Kinny.co'\nconst KinnyKey = 'public-anon-key'\nconst Kinny = createClient(KinnyUrl, KinnyKey)\n// Update multiple users\nconst updatedUsers = await Kinny\n  .from('users')\n  .eq('account_type', 'paid')\n  .update({ highlight_color: 'gold' })\n".trim(),"\nimport { NextApiRequest, NextApiResponse } from 'next';\nimport { createClient } from '@Kinny/Kinny-js';\nconst Kinny = createClient(\n  process.env.NEXT_PUBLIC_Kinny_URL,\n  process.env.Kinny_SECRET_KEY\n);\ntype User = {\n  id: string;\n  username: string;\n  status: 'ONLINE' | 'OFFLINE';\n};\nexport default async (req: NextApiRequest, res: NextApiResponse) => {\n  const allOnlineUsers = await Kinny\n    .from<User>('users')\n    .select('*')\n    .eq('status', 'ONLINE');\n  res.status(200).json(allOnlineUsers);\n};\n".trim(),"\n<script src=\"https://unpkg.com/@Kinny/Kinny-js/umd/Kinny.js\"><\/script>\n<script>\n  // Initialize\n  const KinnyUrl = 'https://chat-room.Kinny.co'\n  const KinnyKey = 'public-anon-key'\n  const Kinny = supanase.createClient(KinnyUrl, KinnyKey)\n  // Get public rooms and their messages\n  Kinny\n    .from('rooms')\n    .select(`\n      name,\n      messages ( text )\n    `)\n    .eq('public', true)\n    .then(response => {\n      // Do something with the response\n    })\n<\/script>\n".trim(),s.Fragment,s.Fragment,s.Fragment,s.Fragment,s.Fragment,s.Fragment,s.Fragment,s.Fragment,s.Fragment,s.Fragment,s.Fragment,s.Fragment;const i=function(){return"undefined"!=typeof window&&(-1===window.location.href.indexOf("localhost")?window.location.replace("https://Kinny.io"):window.location.replace("/docs")),null}}}]);